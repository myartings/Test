#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "LOD0"
{
    uniform bool doubleSided = 0
    float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [2, 0, 3, 3, 0, 1, 4, 8, 5, 5, 8, 9, 6, 10, 7, 7, 10, 11, 13, 12, 14, 14, 12, 15, 17, 16, 18, 18, 16, 19, 21, 20, 22, 22, 20, 23]
    normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)]
    uniform token orientation = "RightHanded"
    point3f[] points = [(0.5, -0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, -0.5, 0.5), (0.5, 0.5, -0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, -0.5, 0.5), (0.5, -0.5, -0.5), (-0.5, -0.5, -0.5), (-0.5, -0.5, 0.5), (-0.5, -0.5, -0.5), (-0.5, 0.5, -0.5), (-0.5, 0.5, 0.5), (-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (0.5, 0.5, 0.5), (0.5, 0.5, -0.5), (0.5, -0.5, -0.5)]
    color4f[] primvars:colors (
        elementSize = 1
        interpolation = "constant"
    )
    color3f[] primvars:displayColor = [(1, 1, 1)] (
        interpolation = "constant"
    )
    float[] primvars:displayOpacity = [1] (
        interpolation = "constant"
    )
    float2[] primvars:st = [(0, 0), (1, 0), (0, 1), (1, 1), (0, 1), (1, 1), (0, 1), (1, 1), (0, 0), (1, 0), (0, 0), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0), (0, 0), (0, 1), (1, 1), (1, 0)] (
        elementSize = 1
        interpolation = "constant"
    )
    float4[] primvars:tangents = [(-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (-1, 0, 0, -1), (0, 0, 1, -1), (0, 0, 1, -1), (0, 0, 1, -1), (0, 0, 1, -1), (0, 0, -1, -1), (0, 0, -1, -1), (0, 0, -1, -1), (0, 0, -1, -1)] (
        elementSize = 1
        interpolation = "vertex"
    )
    float2[] primvars:uv2 = [(0.6909865, 0.3471644), (0.9966581, 0.3471644), (0.6909865, 0.65283585), (0.9966581, 0.65283585), (0.3097273, 0.34716424), (0.0040557664, 0.34716424), (0.34716424, 0.65283585), (0.65283585, 0.65283585), (0.3097273, 0.65283585), (0.0040557664, 0.65283585), (0.34716424, 0.34716424), (0.65283585, 0.34716424), (0.34716424, 0.0040557664), (0.34716424, 0.3097273), (0.65283585, 0.3097273), (0.65283585, 0.0040557664), (0.6902728, 0.3097273), (0.99594426, 0.3097273), (0.99594426, 0.0040557664), (0.6902728, 0.0040557664), (0.3097273, 0.0040557664), (0.0040557664, 0.0040557664), (0.0040557664, 0.3097273), (0.3097273, 0.3097273)] (
        elementSize = 1
        interpolation = "constant"
    )
    float2[] primvars:uv3 = [] (
        elementSize = 1
        interpolation = "constant"
    )
    float2[] primvars:uv4 = [] (
        elementSize = 1
        interpolation = "constant"
    )
    float2[] primvars:uv5 = [] (
        elementSize = 1
        interpolation = "constant"
    )
    float2[] primvars:uv6 = [] (
        elementSize = 1
        interpolation = "constant"
    )
    float2[] primvars:uv7 = [] (
        elementSize = 1
        interpolation = "constant"
    )
    float2[] primvars:uv8 = [] (
        elementSize = 1
        interpolation = "constant"
    )
    uniform token purpose = "Default"
    token visibility = "Inherited"
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

