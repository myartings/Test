#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "LOD0"
{
    uniform bool doubleSided
    float3[] extent = [(-0.44282043, 0.061494887, 0.47670025), (0.44282115, 1.9429717, 0.5136723)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 2, 1, 3, 2, 3, 4, 5, 6, 7, 6, 8, 7, 6, 9, 8, 9, 10, 8, 11, 12, 13, 14, 13, 12, 15, 16, 17, 18, 17, 16, 19, 20, 21, 19, 22, 20, 20, 22, 23, 24, 25, 26, 24, 27, 25, 28, 26, 25, 29, 25, 27, 26, 28, 30, 27, 30, 29, 31, 30, 28, 31, 29, 30]
    normal3f[] normals = [(0.8780336, -4.8782437e-7, 0.4785992), (0.8780336, -4.880752e-7, 0.4785992), (0.87803346, -4.928797e-7, 0.47859928), (0.8780334, -4.880761e-7, 0.47859934), (0.8780334, -4.878254e-7, 0.4785994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1.9380926e-7, 0.7967428, 0.6043185), (1.9380926e-7, 0.7967428, 0.6043185), (1.9380926e-7, 0.7967428, 0.6043185), (1.9380926e-7, 0.7967428, 0.6043185), (-6.823701e-7, -0.79674345, 0.6043178), (-6.8237006e-7, -0.79674345, 0.6043178), (-6.8237e-7, -0.79674333, 0.6043177), (-6.8237e-7, -0.79674333, 0.6043177), (-0.8780343, 0, 0.47859773), (-0.8780336, 0, 0.47859913), (-0.8780343, 0, 0.47859767), (-0.8780332, 0, 0.47859976), (-0.8780332, 0, 0.47859976), (0.000023182049, -0.00002158961, 1), (0.000023232682, -0.000021542619, 1), (0.000023321383, 0.00002089609, 1), (-0.000019769232, -0.000021635427, 1), (0.000022631932, 0.000021524676, 1), (-0.000020059313, -0.000021321752, 1), (-0.000019973211, 0.000020982761, 1), (-0.000019630103, 0.000021348078, 1)]
    uniform token orientation
    point3f[] points = [(-0.3712966, 1.8625005, 0.4767004), (-0.39144918, 1.8905432, 0.5136722), (-0.37129706, 1.0012664, 0.47670037), (-0.3914501, 0.11198967, 0.513672), (-0.3712975, 0.14003228, 0.4767003), (0.37204382, 0.14003204, 0.47670028), (0.37204382, 1.0012659, 0.47670037), (-0.3712975, 0.14003228, 0.4767003), (-0.37129706, 1.0012664, 0.47670037), (0.37204382, 1.8625, 0.47670037), (-0.3712966, 1.8625005, 0.4767004), (-0.3914501, 0.11198967, 0.513672), (0.39219642, 0.11198944, 0.5136722), (-0.3712975, 0.14003228, 0.4767003), (0.37204382, 0.14003204, 0.47670028), (0.39219657, 1.8905425, 0.5136723), (-0.39144918, 1.8905432, 0.5136722), (0.37204382, 1.8625, 0.47670037), (-0.3712966, 1.8625005, 0.4767004), (0.39219642, 0.11198944, 0.5136722), (0.37204382, 1.0012659, 0.47670037), (0.37204382, 0.14003204, 0.47670028), (0.39219657, 1.8905425, 0.5136723), (0.37204382, 1.8625, 0.47670037), (0.39219642, 0.11198944, 0.5136722), (0.44282115, 0.06149499, 0.5136698), (0.39219657, 1.8905425, 0.5136723), (-0.3914501, 0.11198967, 0.513672), (0.4428209, 1.9429715, 0.51366997), (-0.44282013, 0.061494898, 0.51367), (-0.39144918, 1.8905432, 0.5136722), (-0.44282043, 1.9429717, 0.5136701)]
    color4f[] primvars:colors (
        elementSize = 1
        interpolation = "constant"
    )
    color3f[] primvars:displayColor = [(1, 1, 1)] (
        interpolation = "constant"
    )
    float[] primvars:displayOpacity = [1] (
        interpolation = "constant"
    )
    float2[] primvars:st = [(0.040826082, 0.021229863), (0.055096865, 0.0057683587), (0.04080707, 0.49610078), (0.055057645, 0.9864346), (0.040788114, 0.97097176), (0.6547628, 0.018619388), (0.6547628, 0.296485), (0.06927973, 0.018575698), (0.069279715, 0.2964403), (0.6547628, 0.976205), (0.069279715, 0.9761594), (0.77995527, 0.57168585), (0.77998716, 0.036894858), (0.80207056, 0.5579336), (0.80210096, 0.050649464), (0.84644383, 0.03589827), (0.846423, 0.57068855), (0.82432836, 0.04965073), (0.82430875, 0.5569343), (0.012666807, 0.9857196), (0.026917562, 0.4953859), (0.026936695, 0.97025675), (0.0126273185, 0.00505352), (0.026898459, 0.020515025), (0.95342, 0.023274396), (0.96976894, 0.0069659688), (0.9534201, 0.597649), (0.7003454, 0.023271564), (0.96976894, 0.61457926), (0.6837557, 0.0069659688), (0.7003458, 0.59764624), (0.6837557, 0.61457926)] (
        elementSize = 1
        interpolation = "constant"
    )
    float4[] primvars:tangents = [(-0.47859913, 0, 0.8780336, -1), (-0.4785992, 0, 0.8780336, -1), (-0.4785993, 0, 0.87803346, -1), (-0.47859934, 0, 0.8780334, -1), (-0.47859934, 0, 0.8780334, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, 0.6043185, -0.79674274, -1), (0, 0.6043185, -0.79674274, -1), (0, 0.6043185, -0.7967428, -1), (0, 0.6043185, -0.7967428, -1), (0, 0.6043178, 0.79674345, -1), (0, 0.6043178, 0.79674345, -1), (0, 0.6043178, 0.79674345, -1), (0, 0.6043178, 0.79674333, -1), (-0.47859767, 0, -0.8780343, -1), (-0.47859913, 0, -0.8780336, -1), (-0.47859767, 0, -0.8780343, -1), (-0.47859973, 0, -0.8780332, -1), (-0.47859973, 0, -0.8780332, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)] (
        elementSize = 1
        interpolation = "vertex"
    )
    uniform token purpose
    token visibility
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

