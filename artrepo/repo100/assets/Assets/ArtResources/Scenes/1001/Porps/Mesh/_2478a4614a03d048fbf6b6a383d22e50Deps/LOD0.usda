#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "LOD0"
{
    uniform bool doubleSided
    float3[] extent = [(-0.10733932, -1.0065969, -1.5000005), (0, 1.0065969, 1.4999995)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 0, 3, 1, 0, 2, 4, 0, 4, 3, 5, 6, 7, 5, 7, 8, 7, 9, 8, 8, 9, 10, 11, 5, 8, 8, 10, 11, 10, 9, 12, 13, 12, 9, 14, 10, 12, 15, 12, 13, 15, 14, 12, 13, 6, 16, 15, 13, 16, 11, 10, 17, 17, 10, 14, 16, 6, 18, 19, 15, 16, 16, 18, 19, 20, 6, 5, 6, 20, 18, 20, 5, 21, 21, 18, 20, 22, 5, 11, 21, 5, 22, 23, 14, 15, 23, 15, 19, 24, 18, 21, 19, 18, 24, 11, 17, 25, 11, 26, 22, 25, 26, 11, 14, 27, 17, 25, 17, 27, 23, 28, 14, 28, 27, 14, 21, 22, 29, 29, 22, 26, 19, 30, 23, 30, 28, 23, 19, 24, 31, 31, 30, 19, 21, 32, 24, 29, 32, 21, 31, 24, 32, 33, 27, 28, 30, 33, 28, 34, 25, 27, 34, 27, 33, 35, 32, 29, 29, 26, 35, 36, 31, 32, 36, 32, 35, 37, 30, 31, 37, 31, 36, 38, 26, 25, 38, 25, 34, 39, 33, 30, 39, 30, 37, 35, 26, 40, 40, 26, 38, 37, 36, 41, 37, 42, 39, 41, 42, 37, 39, 43, 33, 42, 43, 39, 33, 44, 34, 43, 44, 33, 35, 45, 36, 41, 36, 45, 35, 40, 46, 46, 45, 35, 34, 47, 38, 44, 47, 34, 38, 48, 40, 46, 40, 48, 47, 48, 38, 49, 45, 46, 49, 41, 45, 46, 48, 49, 49, 48, 50, 50, 48, 47, 51, 41, 49, 51, 42, 41, 42, 51, 43, 50, 47, 52, 52, 47, 44, 43, 51, 52, 52, 44, 43]
    normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.1405155, -0.9900705, 0.0039765406), (0.8571465, -0.42768672, -0.28702617), (0.8571415, -0.42769352, 0.2870308), (0.20790574, -0.0086988, 0.97811013), (0.8571415, 0.42769352, 0.2870308), (0.20825243, 0.008638601, 0.97803706), (-0.15211014, -0.01011077, 0.9883118), (0.14015354, 0.99012166, 0.003994391), (0.8571465, 0.42768672, -0.28702617), (-0.07399823, 0.99724567, 0.005036396), (0.14051552, 0.9900705, -0.00397653), (0.20791343, 0.008699164, -0.9781085), (-0.1531256, 0.010089937, 0.98815525), (0.20826016, -0.008638972, -0.97803533), (-0.1521107, 0.010111226, -0.9883117), (0.14015354, -0.99012166, -0.0039944), (-0.07399829, -0.99724567, -0.0050364146), (-0.07503079, -0.9971687, 0.004998499), (-0.075030856, 0.9971687, -0.0049984907), (-0.1531264, -0.010090382, -0.9881551), (-0.9848396, -0.0015890491, 0.17346007), (-0.929512, -0.368791, 0.00083965383), (-0.98476887, 0.0015919876, 0.17386088), (-0.930059, 0.36740908, 0.0008156031), (-0.93005955, -0.36740795, -0.0008155948), (-0.92951214, 0.36879078, -0.0008396479), (-0.98483986, 0.0015891284, -0.17345868), (-0.9847692, -0.0015920575, -0.17385933), (-0.9996762, -0.02544114, -0.00039535528), (-0.9995413, -0.0003729085, -0.030282183), (-0.9996762, 0.025440421, 0.00039535575), (-0.9995413, 0.00037291786, 0.030281965), (-0.9995622, -0.0004164242, 0.029582603), (-0.9995622, 0.00041642497, -0.029582785), (-0.99964786, -0.026535235, 0.00037718719), (-0.99964786, 0.026535127, -0.0003771859), (-0.81612635, -0.0037621667, 0.5778611), (-0.7276397, -0.6859576, 0.0016023192), (-0.7288822, -0.68463725, -0.0016442662), (-0.8136018, -0.0037699188, -0.58141035), (-0.81447124, 0.003780441, 0.5801917), (-0.72949797, 0.683981, 0.0016454685), (-0.8150042, 0.0038082807, -0.57944256), (-0.7278261, 0.68575984, -0.0016095154), (-0.9997377, 0.01875772, 0.013145675), (-0.9997391, 0.018680068, -0.013143065), (-0.9997397, -0.018624699, 0.013178644), (-0.9997402, -0.018625513, -0.013142344)]
    uniform token orientation
    point3f[] points = [(0, 0, 0), (0, -0.99313176, -1.479803), (0, 0.99313176, -1.479803), (0, -0.99313176, 1.479803), (0, 0.99313176, 1.479803), (-0.013465025, -1.0065969, 1.479803), (0, -0.99313176, -1.479803), (0, -0.99313176, 1.479803), (-0.013465025, -0.99313176, 1.4999995), (0, 0.99313176, 1.479803), (-0.013465025, 0.99313176, 1.4999995), (-0.094416484, -0.993674, 1.4999995), (-0.013465025, 1.0065969, 1.479803), (0, 0.99313176, -1.479803), (-0.094416484, 1.0065969, 1.480616), (-0.013465025, 1.0065969, -1.479803), (-0.013465025, 0.99313176, -1.5000005), (-0.094145395, 0.993403, 1.4999995), (-0.013465025, -0.99313176, -1.5000005), (-0.094416484, 0.99367404, -1.5000005), (-0.013465025, -1.0065969, -1.479803), (-0.094416484, -1.0065969, -1.480616), (-0.094145395, -1.0065969, 1.4802095), (-0.094145395, 1.0065969, -1.4802095), (-0.094145395, -0.993403, -1.5000005), (-0.10733932, -0.9786636, 1.4790504), (-0.10733932, -0.9926303, 1.4581004), (-0.10733932, 0.9786636, 1.4790504), (-0.10733932, 0.9926303, 1.4581004), (-0.10733932, -0.9926303, -1.4581004), (-0.10733932, 0.9926303, -1.4581004), (-0.10733932, 0.9786636, -1.4790514), (-0.10733932, -0.9786636, -1.4790514), (-0.10733932, 0.9132498, 1.3397822), (-0.10733932, 0.89937645, 1.3614601), (-0.10733932, -0.9132498, -1.3397832), (-0.10733932, -0.89937645, -1.3614601), (-0.10733932, 0.899785, -1.3599796), (-0.10733932, -0.89978504, 1.3599796), (-0.10733932, 0.9142367, -1.3391697), (-0.10733932, -0.9142367, 1.3391697), (-0.09865275, 0.88298887, -1.3347857), (-0.09865275, 0.8964537, -1.3145888), (-0.09865275, 0.8964537, 1.3145888), (-0.09865275, 0.88298887, 1.3347852), (-0.09865275, -0.88298887, -1.3347857), (-0.09865275, -0.8964537, -1.3145888), (-0.09865275, -0.88298887, 1.3347852), (-0.09865275, -0.8964537, 1.3145888), (-0.067086406, -0.8765226, -1.3113637), (-0.06687319, -0.8763439, 1.3115928), (-0.06687319, 0.87634635, -1.3115928), (-0.06687319, 0.87634635, 1.3115928)]
    color4f[] primvars:colors (
        elementSize = 1
        interpolation = "constant"
    )
    color3f[] primvars:displayColor = [(1, 1, 1)] (
        interpolation = "constant"
    )
    float[] primvars:displayOpacity = [1] (
        interpolation = "constant"
    )
    float2[] primvars:st = [(0.6288905, 0.4861408), (0.62889045, 0.48614082), (0.62889045, 0.48614082), (0.62889045, 0.48614082), (0.62889045, 0.48614082), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568)] (
        elementSize = 1
        interpolation = "constant"
    )
    float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)] (
        elementSize = 1
        interpolation = "vertex"
    )
    uniform token purpose
    token visibility
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

