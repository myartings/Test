#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "LOD0"
{
    uniform bool doubleSided
    float3[] extent = [(-0.05366966, -1.0065969, -2.5), (0.05366966, 1.0065969, 2.5)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 13, 12, 14, 13, 16, 14, 16, 17, 17, 16, 18, 17, 18, 19, 19, 18, 20, 20, 21, 19, 22, 21, 20, 21, 22, 23, 23, 22, 24, 23, 24, 25, 25, 26, 15, 25, 24, 26, 27, 13, 15, 15, 26, 27, 18, 16, 28, 20, 18, 29, 29, 18, 28, 22, 20, 30, 30, 20, 29, 24, 22, 31, 31, 22, 30, 16, 13, 32, 28, 16, 32, 24, 33, 26, 31, 33, 24, 27, 34, 13, 32, 13, 34, 27, 26, 35, 35, 34, 27, 35, 26, 33, 30, 36, 31, 30, 29, 36, 34, 37, 32, 35, 37, 34, 32, 38, 28, 32, 37, 38, 31, 39, 33, 31, 36, 39, 28, 40, 29, 28, 38, 40, 33, 41, 35, 33, 39, 41, 42, 37, 35, 35, 41, 42, 36, 29, 43, 29, 40, 43, 38, 44, 40, 38, 37, 45, 45, 44, 38, 42, 46, 37, 45, 37, 46, 42, 41, 47, 47, 46, 42, 39, 48, 41, 47, 41, 48, 39, 36, 49, 49, 48, 39, 36, 43, 50, 49, 36, 50, 43, 40, 51, 51, 40, 44, 50, 43, 51, 46, 52, 45, 47, 52, 46, 48, 53, 47, 49, 53, 48, 45, 54, 44, 44, 54, 51, 50, 55, 49, 50, 51, 55, 45, 52, 56, 56, 54, 45, 51, 54, 57, 55, 51, 57, 49, 55, 58, 58, 53, 49, 47, 53, 59, 59, 52, 47, 60, 59, 53, 58, 60, 53, 59, 60, 52, 52, 60, 61, 52, 61, 56, 62, 60, 58, 55, 62, 58, 55, 57, 62, 61, 63, 56, 56, 63, 54, 62, 57, 63, 54, 63, 57]
    normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.50906205, 0.860728, -0.0017533891), (-0.65628994, 0.754505, -0.0024212752), (-0.50955474, 0.0046989317, -0.8604254), (-0.50976044, 0.86031467, 0.001728337), (-0.6609987, 0.00643935, -0.7503594), (-0.50955474, -0.0046989387, -0.8604254), (-0.6591699, -0.0064176256, -0.7519666), (-0.50930893, -0.860582, -0.0017359023), (-0.65810233, -0.7529246, -0.0024040064), (-0.50930893, -0.860582, 0.0017358992), (-0.6562171, -0.75456834, 0.0023959472), (-0.5095573, -0.004698982, 0.86042386), (-0.6609968, -0.0064394055, 0.7503612), (-0.50960624, 0.0047660847, 0.8603945), (-0.6592114, 0.006534867, 0.75192934), (-0.65955776, 0.75165004, 0.0024382481), (-0.99934703, -0.00047091866, -0.036127158), (-0.9993518, -0.035999857, -0.00019684382), (-0.999308, -0.03719479, 0.0001826359), (-0.9993862, -0.0005076256, 0.03502834), (-0.9993862, 0.0005076234, -0.03502899), (-0.99934715, 0.00047092309, 0.036126442), (-0.999308, 0.037194785, -0.00018263611), (-0.9993518, 0.03599919, 0.00019684287), (-0.95363843, 0.3009543, -0.0005690606), (-0.95363843, -0.30095434, 0.000569064), (-0.9531858, -0.0014194803, 0.30238172), (-0.95318604, 0.0014195505, -0.30238137), (-0.9528995, 0.0014377197, 0.30328274), (-0.95289975, -0.0014377951, -0.30328208), (-0.9539307, -0.30002663, -0.00056171214), (-0.9539304, 0.30002755, 0.00056171126), (-0.09282793, 0.0070796483, 0.99565697), (-0.09185021, -0.007086832, 0.9957476), (-0.0922918, -0.99572796, 0.0028396435), (-0.091267675, -0.9958223, -0.0028420275), (-0.09282916, -0.007079969, -0.99565685), (-0.09185128, 0.007087147, -0.9957475), (-0.09229183, 0.99572796, -0.0028396405), (-0.09126766, 0.9958223, 0.0028420116), (0.14092357, -0.9900176, 0.0023655484), (0.14060621, -0.0059007807, -0.99004793), (0.14060222, 0.00590052, 0.9900485), (0.14092359, 0.9900176, -0.0023655414), (0.1403627, -0.005938945, 0.9900823), (0.14067724, 0.99005264, 0.002380849), (0.14036663, 0.0059391996, -0.9900817), (0.14067724, -0.99005264, -0.0023808547), (0.7924002, -0.5663829, -0.22652227), (0.7923965, -0.56638736, 0.22652407), (0.7924002, 0.5663829, -0.22652227), (0.7923965, 0.56638736, 0.22652407)]
    uniform token orientation
    point3f[] points = [(0.05366966, -2.3841857e-9, 2.1371946e-7), (0.05366966, -0.99313176, -2.486535), (0.05366966, 0.99313176, -2.486535), (0.05366966, -2.3841857e-9, 2.1371946e-7), (0.05366966, 0.99313176, 2.4865355), (0.05366966, -0.99313176, 2.4865355), (0.05366966, -2.3841857e-9, 2.1371946e-7), (0.05366966, -0.99313176, 2.4865355), (0.05366966, -0.99313176, -2.486535), (0.05366966, -2.3841857e-9, 2.1371946e-7), (0.05366966, 0.99313176, -2.486535), (0.05366966, 0.99313176, 2.4865355), (0.0024260164, -0.8740969, 2.3550131), (-0.04498309, -0.8964537, 2.3763926), (0.0024260164, -0.8616097, 2.3675003), (0.0017952442, -0.8746254, -2.3545635), (-0.04498309, -0.88298887, 2.389857), (0.0024260164, 0.8616097, 2.3675003), (-0.04498309, 0.88298887, 2.389857), (0.0024260164, 0.8740968, 2.3550131), (-0.04498309, 0.8964537, 2.3763926), (0.0024260164, 0.8740968, -2.355013), (-0.04498309, 0.8964537, -2.3763924), (0.0024260164, 0.8616097, -2.3675), (-0.04498309, 0.88298887, -2.389857), (0.0024260164, -0.86160964, -2.3675), (-0.04498309, -0.88298887, -2.389857), (-0.04498309, -0.8964537, -2.3763924), (-0.05366966, 0.89937645, 2.4076402), (-0.05366966, 0.9132498, 2.3931882), (-0.05366966, 0.9142367, -2.3927796), (-0.05366966, 0.899785, -2.406653), (-0.05366966, -0.89978504, 2.4066532), (-0.05366966, -0.89937645, -2.40764), (-0.05366966, -0.9142367, 2.3927798), (-0.05366966, -0.9132498, -2.3931885), (-0.05366966, 0.9926303, -2.4720666), (-0.05366966, -0.9926303, 2.472067), (-0.05366966, -0.9786636, 2.4860337), (-0.05366966, 0.9786636, -2.486034), (-0.05366966, 0.9786636, 2.4860337), (-0.05366966, -0.9786636, -2.486034), (-0.05366966, -0.9926303, -2.4720666), (-0.05366966, 0.9926303, 2.472067), (-0.04047573, 0.993403, 2.4999998), (-0.040746823, -0.993674, 2.4999998), (-0.04047573, -1.0065969, 2.4868064), (-0.040746823, -1.0065969, -2.4870772), (-0.04047573, -0.993403, -2.5), (-0.040746823, 0.99367404, -2.5), (-0.04047573, 1.0065969, -2.4868062), (-0.040746823, 1.0065969, 2.4870775), (0.040204637, -1.0065969, 2.4865355), (0.040204637, -0.99313176, -2.5), (0.040204637, 0.99313176, 2.4999998), (0.040204637, 1.0065969, -2.486535), (0.040204637, -0.99313176, 2.4999998), (0.040204637, 1.0065969, 2.4865355), (0.040204637, 0.99313176, -2.5), (0.040204637, -1.0065969, -2.486535), (0.05366966, -0.99313176, -2.486535), (0.05366966, -0.99313176, 2.4865355), (0.05366966, 0.99313176, -2.486535), (0.05366966, 0.99313176, 2.4865355)]
    color4f[] primvars:colors (
        elementSize = 1
        interpolation = "constant"
    )
    color3f[] primvars:displayColor = [(1, 1, 1)] (
        interpolation = "constant"
    )
    float[] primvars:displayOpacity = [1] (
        interpolation = "constant"
    )
    float2[] primvars:st = [(0.63192815, 0.48767984), (0.6319281, 0.48767987), (0.63192815, 0.48767987), (0.63192815, 0.48767984), (0.6319281, 0.48767987), (0.63192815, 0.48767987), (0.63192815, 0.48767984), (0.6319281, 0.48767987), (0.63192815, 0.48767987), (0.63192815, 0.48767984), (0.6319281, 0.48767987), (0.63192815, 0.48767987), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568), (0.6311196, 0.48788568), (0.63111955, 0.48788568)] (
        elementSize = 1
        interpolation = "constant"
    )
    float4[] primvars:tangents = [(0, 1, 0, 1), (0, 1, 0, 1), (0, 1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, -1, 0, 1), (0, 0, -1, 1), (0, 0, -1, 1), (0, 0, -1, 1), (0, 0, 1, 1), (0, 0, 1, 1), (0, 0, 1, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)] (
        elementSize = 1
        interpolation = "vertex"
    )
    uniform token purpose
    token visibility
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

