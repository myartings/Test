#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "LOD0"
{
    uniform bool doubleSided
    float3[] extent = [(-0.5, -0.49999952, -0.08604612), (0.5, 0.06041199, 0)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 2, 1, 3, 4, 5, 6, 6, 5, 7, 7, 5, 8, 8, 5, 9, 9, 10, 8, 8, 10, 11, 12, 13, 11, 14, 13, 12, 15, 16, 17, 17, 16, 18, 19, 20, 21, 21, 20, 22, 23, 24, 25, 25, 24, 26]
    normal3f[] normals = [(0, 0.033041317, -0.99945396), (0, 0.033041317, -0.99945396), (0, 0.7328123, -0.68043077), (0, 0.7328123, -0.68043077), (0, -0.80459416, -0.593825), (0.000007707144, -0.6977965, -0.716296), (0, -0.80459416, -0.593825), (0.000007707144, -0.6977965, -0.716296), (0.000004456511, -0.08937089, -0.9959984), (0.0000044573794, -0.08938835, -0.99599683), (0.000002033664, 0.13972169, -0.99019086), (0.000002033664, 0.13972169, -0.99019086), (0.000002033664, 0.13972169, -0.99019086), (0.0000020102927, 0.98897445, -0.14808592), (0.0000020103914, 0.98897344, -0.14809315), (0.0000020103914, 0.98897344, -0.14809315), (0, 0.9898087, 0.14240363), (0.0000020102927, 0.98897445, -0.14808592), (0, 0.9898087, 0.14240363), (0, 0.9898087, 0.14240363), (0, 0.9898087, 0.14240363), (0, 0.019257108, 0.99981457), (0, 0.019257108, 0.99981457), (0, 0.019257108, 0.99981457), (0, 0.019257108, 0.99981457), (0, 0, 1), (0, 0, 1)]
    uniform token orientation
    point3f[] points = [(0.5, -0.06041168, -0.0696353), (-0.5, -0.06041168, -0.0696353), (0.5, -0.04649063, -0.054642573), (-0.5, -0.04649063, -0.054642573), (-0.5, -0.04649063, -0.054642573), (-0.5, -0.028452758, -0.07908271), (0.5, -0.04649063, -0.054642573), (0.5, -0.028452758, -0.07908271), (0.5, -0.014204712, -0.08604612), (-0.5, -0.014304351, -0.08604612), (-0.5, 0.049143676, -0.08604612), (0.5, 0.049143676, -0.08604612), (-0.5, 0.049143676, -0.08604612), (0.5, 0.060411986, -0.07549666), (-0.5, 0.060411986, -0.07552382), (-0.5, 0.060411986, -0.07552382), (-0.5, 0.060411986, -0.010793908), (0.5, 0.060411986, -0.07549666), (0.5, 0.060411986, -0.010793908), (0.5, 0.060411986, -0.010793908), (-0.5, 0.060411986, -0.010793908), (0.5, 0.04954834, -1.1102237e-16), (-0.5, 0.04954834, 1.1102237e-16), (0.5, 0.04954834, -1.1102237e-16), (-0.5, 0.04954834, 1.1102237e-16), (0.5, -0.49999952, -1.1102237e-16), (-0.5, -0.49999952, 1.1102237e-16)]
    color4f[] primvars:colors (
        elementSize = 1
        interpolation = "constant"
    )
    color3f[] primvars:displayColor = [(1, 1, 1)] (
        interpolation = "constant"
    )
    float[] primvars:displayOpacity = [1] (
        interpolation = "constant"
    )
    float2[] primvars:st = [(0.9944937, 0.06962955), (0.9944937, 0.06962952), (0.9944937, 0.06962955), (0.9944937, 0.06962952), (0.9944937, 0.06962952), (0.9944935, 0.06962952), (0.9944937, 0.06962955), (0.9944935, 0.06962955), (0.9944935, 0.06962955), (0.9944935, 0.06962952), (0.9944935, 0.06962952), (0.9944935, 0.06962955), (0.9944937, 0.06962952), (0.9944937, 0.06962955), (0.9944936, 0.06962952), (0.9944936, 0.06962952), (0.9944937, 0.06962952), (0.9944937, 0.06962955), (0.9944937, 0.06962955), (0.9944937, 0.06962955), (0.9944937, 0.06962952), (0.9944936, 0.06962955), (0.9944936, 0.06962952), (0.9944937, 0.06962955), (0.9944937, 0.06962952), (0.9944937, 0.06962955), (0.9944937, 0.06962952)] (
        elementSize = 1
        interpolation = "constant"
    )
    float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -0.5938251, 0.80459416, 1), (0, -0.7162961, 0.69779646, 1), (0, -0.5938251, 0.80459416, 1), (0, -0.716296, 0.6977965, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0, -0.99019086, -0.13972174, 1), (0, -0.1480858, -0.98897445, 1), (0, -0.1480932, -0.98897344, 1), (0, 0.14809312, 0.98897344, -1), (0, -0.14240363, 0.9898087, -1), (0, 0.14808594, 0.98897445, -1), (1, 0, 0, -1), (0, 0.14240365, -0.9898087, 1), (0, 0.14240365, -0.9898087, 1), (0, 0.99981457, -0.019256812, 1), (0, 0.99981457, -0.019256812, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)] (
        elementSize = 1
        interpolation = "vertex"
    )
    uniform token purpose
    token visibility
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

