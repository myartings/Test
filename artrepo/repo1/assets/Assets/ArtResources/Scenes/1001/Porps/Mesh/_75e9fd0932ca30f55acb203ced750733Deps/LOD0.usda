#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "LOD0"
{
    uniform bool doubleSided
    float3[] extent = [(-0.20934473, 0.19439161, -0.09268556), (0.17686151, 1.1410275, 0.08925218)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 2, 1, 3, 4, 5, 6, 6, 5, 7, 8, 9, 10, 10, 9, 11, 12, 13, 14, 14, 13, 15, 16, 17, 18, 18, 17, 19, 20, 21, 22, 22, 21, 23, 24, 25, 26, 26, 25, 27, 28, 29, 30, 30, 29, 31, 32, 33, 34, 34, 33, 35, 36, 37, 38, 38, 37, 39, 40, 41, 42, 42, 41, 43, 44, 45, 46, 46, 45, 47, 48, 49, 50, 50, 49, 51, 52, 53, 54, 54, 53, 55, 56, 57, 58, 58, 57, 59, 60, 61, 62, 62, 61, 63, 64, 65, 66, 66, 65, 67, 68, 69, 70, 70, 69, 71, 72, 73, 74, 74, 73, 75, 76, 77, 78, 78, 77, 79, 80, 81, 82, 82, 81, 83, 84, 85, 86, 86, 85, 87, 88, 89, 90, 90, 89, 91, 92, 93, 94, 94, 93, 95]
    normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.6170932e-7, 0, -1), (1.6170931e-7, 0, -1), (1.6170934e-7, 0, -1), (1.6170932e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1.7915904e-7, 0, 1), (1.7915907e-7, 0, 1), (1.7915904e-7, 0, 1), (1.7915907e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
    uniform token orientation
    point3f[] points = [(0.17686151, 0.320205, -0.09268556), (0.17686151, 0.2250157, -0.09268556), (0.14818513, 0.320205, -0.09268556), (0.14818513, 0.2250157, -0.09268556), (0.14364325, 0.19439162, -0.09268556), (0.04845396, 0.19439162, -0.09268556), (0.14364325, 0.223068, -0.09268556), (0.04845396, 0.223068, -0.09268556), (0.14364325, 0.32362074, -0.09268556), (0.04845396, 0.32362074, -0.09268556), (0.14364325, 0.35229713, -0.09268556), (0.04845396, 0.35229713, -0.09268556), (-0.09497425, 0.44372463, -0.09268556), (-0.09497425, 0.34853533, -0.09268556), (-0.123650625, 0.44372463, -0.09268556), (-0.123650625, 0.34853533, -0.09268556), (0.14364325, 0.44669983, -0.09268556), (0.04845396, 0.44669983, -0.09268556), (0.14364325, 0.4753762, -0.09268556), (0.04845396, 0.4753762, -0.09268556), (0.044741135, 0.4445362, -0.09268556), (0.044741135, 0.3493469, -0.09268556), (0.016064761, 0.4445362, -0.09268556), (0.016064761, 0.3493469, -0.09268556), (-0.010533331, 0.6969596, -0.09268556), (-0.025442962, 0.61811215, -0.09268556), (-0.056159504, 0.7055872, -0.09268556), (-0.071069136, 0.6267398, -0.09268556), (0.13336068, 0.70839095, -0.09268556), (0.15739115, 0.63182884, -0.09268556), (0.08905697, 0.69448537, -0.09268556), (0.11308743, 0.6179233, -0.09268556), (0.15599957, 0.97441, -0.09268556), (0.15599957, 0.7385149, -0.09268556), (-0.07989554, 0.97441, -0.09268556), (-0.07989554, 0.7385149, -0.09268556), (0.02624011, 1.1410275, -0.09268556), (0.02624011, 1.0004442, -0.09268556), (-0.11434321, 1.1410275, -0.09268556), (-0.11434321, 1.0004442, -0.09268556), (-0.13364382, 1.0927545, -0.09268556), (-0.11782177, 1.0626662, -0.09268556), (-0.20934473, 1.0443, -0.09268556), (-0.20064674, 1.0277592, -0.09268556), (-0.09497425, 0.30442223, -0.09268556), (-0.09497425, 0.20923296, -0.09268556), (-0.123650625, 0.30442223, -0.09268556), (-0.123650625, 0.20923296, -0.09268556), (0.14818513, 0.2250157, 0.08925218), (0.17686151, 0.2250157, 0.08925218), (0.14818513, 0.320205, 0.08925218), (0.17686151, 0.320205, 0.08925218), (0.04845396, 0.223068, 0.08925218), (0.04845396, 0.19439162, 0.08925218), (0.14364325, 0.223068, 0.08925218), (0.14364325, 0.19439162, 0.08925218), (0.04845396, 0.35229713, 0.08925218), (0.04845396, 0.32362074, 0.08925218), (0.14364325, 0.35229713, 0.08925218), (0.14364325, 0.32362074, 0.08925218), (-0.123650625, 0.34853533, 0.08925218), (-0.09497425, 0.34853533, 0.08925218), (-0.123650625, 0.44372463, 0.08925218), (-0.09497425, 0.44372463, 0.08925218), (0.04845396, 0.4753762, 0.08925218), (0.04845396, 0.44669983, 0.08925218), (0.14364325, 0.4753762, 0.08925218), (0.14364325, 0.44669983, 0.08925218), (0.016064761, 0.3493469, 0.08925218), (0.044741135, 0.3493469, 0.08925218), (0.016064761, 0.4445362, 0.08925218), (0.044741135, 0.4445362, 0.08925218), (-0.071069136, 0.6267398, 0.08925218), (-0.025442962, 0.61811215, 0.08925218), (-0.056159504, 0.7055872, 0.08925218), (-0.010533331, 0.6969596, 0.08925218), (0.11308743, 0.6179233, 0.08925218), (0.15739115, 0.63182884, 0.08925218), (0.08905697, 0.69448537, 0.08925218), (0.13336068, 0.70839095, 0.08925218), (-0.07989554, 0.7385149, 0.08925218), (0.15599957, 0.7385149, 0.08925218), (-0.07989554, 0.97441, 0.08925218), (0.15599957, 0.97441, 0.08925218), (-0.11434321, 1.0004442, 0.08925218), (0.02624011, 1.0004442, 0.08925218), (-0.11434321, 1.1410275, 0.08925218), (0.02624011, 1.1410275, 0.08925218), (-0.20064674, 1.0277592, 0.08925218), (-0.11782177, 1.0626662, 0.08925218), (-0.20934473, 1.0443, 0.08925218), (-0.13364382, 1.0927545, 0.08925218), (-0.123650625, 0.20923296, 0.08925218), (-0.09497425, 0.20923296, 0.08925218), (-0.123650625, 0.30442223, 0.08925218), (-0.09497425, 0.30442223, 0.08925218)]
    float2[] primvars:st = [(0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191), (0.2525177, 0.9489191), (0.25251776, 0.9489191)] (
        elementSize = 1
        interpolation = "constant"
    )
    float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)] (
        elementSize = 1
        interpolation = "vertex"
    )
    uniform token purpose
    token visibility
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

