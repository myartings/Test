#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
    upAxis = "Y"
)

def Mesh "LOD0"
{
    uniform bool doubleSided
    float3[] extent = [(-0.5, -0.50000024, -0.08604612), (0.06041108, 0.5000001, 0)]
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 2, 1, 3, 4, 5, 6, 6, 5, 7, 8, 9, 7, 10, 9, 8, 10, 11, 9, 9, 11, 12, 13, 14, 15, 15, 14, 16, 17, 18, 19, 19, 18, 20, 20, 18, 21, 21, 18, 22, 22, 23, 21, 21, 23, 24]
    normal3f[] normals = [(0.732816, 0, -0.68042696), (0.732816, 0, -0.68042696), (0.033041276, 0, -0.99945396), (0.033041462, 0, -0.99945396), (-0.8046062, 0, -0.59380877), (-0.7033515, -0.0000077581035, -0.7108422), (-0.8046062, 0, -0.59380877), (-0.7033518, -0.000007758088, -0.71084195), (-0.7033515, -0.0000077581035, -0.7108422), (-0.0893709, -0.000004445649, -0.9959984), (-0.08938811, -0.0000044465055, -0.99599683), (0.1370596, -0.0000020173184, -0.9905628), (0.1370595, -0.000002017317, -0.9905628), (0.98897344, -0.0000020167724, -0.14809296), (0.9889746, -0.0000020166708, -0.14808547), (0.1370596, -0.0000020173184, -0.9905628), (0.1370595, -0.000002017317, -0.9905628), (0.98897344, -0.0000020167724, -0.14809296), (0.9898442, 0, 0.1421564), (0.9889746, -0.0000020166708, -0.14808547), (0.9898443, 0, 0.14215605), (0.019257274, 0, 0.99981457), (0.01925725, 0, 0.99981457), (0, 0, 1), (0, 0, 1)]
    uniform token orientation
    point3f[] points = [(-0.04649078, 0.49999952, -0.054642573), (-0.04649078, -0.50000024, -0.054642573), (-0.06041168, 0.49999952, -0.0696353), (-0.06041168, -0.5, -0.0696353), (-0.04649078, 0.49999952, -0.054642573), (-0.028453674, 0.49999967, -0.07908271), (-0.04649078, -0.50000024, -0.054642573), (-0.028453674, -0.50000024, -0.07908271), (-0.028453674, 0.49999967, -0.07908271), (-0.014703063, -0.50000024, -0.08604612), (-0.014802551, 0.49999967, -0.08604612), (0.04914276, 0.5, -0.08604612), (0.04914276, -0.5000001, -0.08604612), (0.06041107, 0.5, -0.075659655), (0.06041107, -0.50000024, -0.07563249), (0.04914276, 0.5, -0.08604612), (0.04914276, -0.5000001, -0.08604612), (0.06041107, 0.5, -0.075659655), (0.06041107, 0.5000001, -0.010793908), (0.06041107, -0.50000024, -0.07563249), (0.06041107, -0.50000024, -0.010793908), (0.049547117, -0.5, -1.2202398e-16), (0.049547117, 0.5, -1.2202398e-16), (-0.5, 0.5, 0), (-0.5, -0.5, 0)]
    color4f[] primvars:colors (
        elementSize = 1
        interpolation = "constant"
    )
    color3f[] primvars:displayColor = [(1, 1, 1)] (
        interpolation = "constant"
    )
    float[] primvars:displayOpacity = [1] (
        interpolation = "constant"
    )
    float2[] primvars:st = [(0.9944935, 0.06962949), (0.9944935, 0.06962949), (0.9944935, 0.06962949), (0.9944935, 0.06962949), (0.9944935, 0.06962949), (0.9944937, 0.06962949), (0.9944935, 0.06962952), (0.9944937, 0.06962952), (0.9944937, 0.06962949), (0.9944937, 0.06962952), (0.9944935, 0.06962949), (0.9944936, 0.06962955), (0.9944936, 0.06962952), (0.9944937, 0.06962955), (0.9944935, 0.06962952), (0.9944936, 0.06962955), (0.9944936, 0.06962952), (0.9944937, 0.06962955), (0.9944937, 0.06962955), (0.9944935, 0.06962952), (0.9944937, 0.06962952), (0.9944937, 0.06962952), (0.9944937, 0.06962955), (0.9944937, 0.06962955), (0.9944937, 0.06962952)] (
        elementSize = 1
        interpolation = "constant"
    )
    float4[] primvars:tangents = [(1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (0.5938087, 0, -0.8046062, -1), (0.7108423, 0, -0.7033515, -1), (0.59380877, 0, -0.8046062, -1), (0.7108419, 0, -0.7033518, -1), (0.013594445, 0.99981517, 0.013594445, 1), (-0.9951324, -0.041691706, 0.08929337, 1), (-0.7154022, -0.69575644, 0.064208604, 1), (-0.07259801, -0.99731076, -0.010043021, 1), (-0.9905628, 0, -0.13705948, 1), (0.14809299, 0, 0.98897344, -1), (-0.1480856, 0, -0.9889746, -1), (0.9905628, 0, 0.13705954, -1), (-0.9905628, 0, -0.1370595, -1), (0.14809296, 0, 0.98897344, 1), (1, 0, 0, -1), (0.14808547, 0, 0.9889746, 1), (-0.14215606, 0, 0.9898443, 1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1), (1, 0, 0, -1)] (
        elementSize = 1
        interpolation = "vertex"
    )
    uniform token purpose
    token visibility
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

